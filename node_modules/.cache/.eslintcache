[{"/Users/fs/Desktop/react-rick-morty/my-app/src/index.tsx":"1","/Users/fs/Desktop/react-rick-morty/my-app/src/App.tsx":"2","/Users/fs/Desktop/react-rick-morty/my-app/src/useCharQuery.ts":"3","/Users/fs/Desktop/react-rick-morty/my-app/src/allChars.component.tsx":"4","/Users/fs/Desktop/react-rick-morty/my-app/src/charList.component.tsx":"5","/Users/fs/Desktop/react-rick-morty/my-app/src/waypoint.tsx":"6"},{"size":228,"mtime":1652673048908,"results":"7","hashOfConfig":"8"},{"size":908,"mtime":1652784435957,"results":"9","hashOfConfig":"8"},{"size":421,"mtime":1652665649689,"results":"10","hashOfConfig":"8"},{"size":2004,"mtime":1652784372327,"results":"11","hashOfConfig":"8"},{"size":728,"mtime":1652772293092,"results":"12","hashOfConfig":"8"},{"size":515,"mtime":1652715686562,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"rxn3tr",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fs/Desktop/react-rick-morty/my-app/src/index.tsx",[],[],[],"/Users/fs/Desktop/react-rick-morty/my-app/src/App.tsx",["34","35"],[],"/Users/fs/Desktop/react-rick-morty/my-app/src/useCharQuery.ts",[],[],"/Users/fs/Desktop/react-rick-morty/my-app/src/allChars.component.tsx",["36","37","38"],[],"import React, { useState } from \"react\";\nimport { from, useQuery } from \"@apollo/client\";\nimport { CHARACTERS_QUERY } from \"./useCharQuery\";\nimport \"./characterList.css\";\nimport CharacterList from \"./charList.component\";\nimport { CharData, SendData, Character } from \"./interfaces\";\nimport { CallWaypoint } from \"./waypoint\";\ninterface Test {\n    name: string | \"\"\n}\nconst AllCharactersList: React.FC<Test> = (test) => {\n    const { name } = test;\n    let filtered = test.name;\n    const { loading, data, error, fetchMore } = useQuery<CharData, SendData>(CHARACTERS_QUERY, {\n        variables: { page: 1, name: \"\" },\n    });\n    var characters = loading || !data ? [] : data.characters.results;\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error</p>;\n\n    const scrollEnd = () =>\n        fetchMore({\n            variables: {\n                page: characters.length / 20 + 1,\n                name: filtered//Test \n            },\n            updateQuery: (prev, { fetchMoreResult }) => {\n                if (!fetchMoreResult) return prev;\n                fetchMoreResult.characters.results = [\n                    ...prev.characters.results,\n                    ...fetchMoreResult.characters.results,\n                ];\n                return fetchMoreResult;\n            },\n        });\n    return (\n        <>\n\n            {data?.characters.results.map((props: Character, index: number) => (\n                <div key={props.id} className=\"card-content\">\n\n                    <CharacterList\n                        id={props.id}\n                        name={props.name}\n                        location={props.location}\n                        image={props.image}\n                    />\n                    <CallWaypoint\n                        indexProp={index}\n                        listProp={data.characters.results}\n                        fnProps={scrollEnd}\n\n                    />\n                </div>\n\n            ))}\n        </>)\n\n};\n\nexport default AllCharactersList;","/Users/fs/Desktop/react-rick-morty/my-app/src/charList.component.tsx",["39","40","41","42"],[],"/Users/fs/Desktop/react-rick-morty/my-app/src/waypoint.tsx",[],[],{"ruleId":"43","severity":1,"message":"44","line":8,"column":3,"nodeType":"45","messageId":"46","endLine":8,"endColumn":11},{"ruleId":"43","severity":1,"message":"47","line":9,"column":3,"nodeType":"45","messageId":"46","endLine":9,"endColumn":6},{"ruleId":"43","severity":1,"message":"48","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"49","line":2,"column":10,"nodeType":"45","messageId":"46","endLine":2,"endColumn":14},{"ruleId":"43","severity":1,"message":"50","line":12,"column":13,"nodeType":"45","messageId":"46","endLine":12,"endColumn":17},{"ruleId":"43","severity":1,"message":"51","line":13,"column":13,"nodeType":"45","messageId":"46","endLine":13,"endColumn":15},{"ruleId":"43","severity":1,"message":"52","line":13,"column":17,"nodeType":"45","messageId":"46","endLine":13,"endColumn":22},{"ruleId":"43","severity":1,"message":"50","line":13,"column":24,"nodeType":"45","messageId":"46","endLine":13,"endColumn":28},{"ruleId":"43","severity":1,"message":"53","line":13,"column":30,"nodeType":"45","messageId":"46","endLine":13,"endColumn":38},"@typescript-eslint/no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'gql' is defined but never used.","'useState' is defined but never used.","'from' is defined but never used.","'name' is assigned a value but never used.","'id' is assigned a value but never used.","'image' is assigned a value but never used.","'location' is assigned a value but never used."]